{
  "contractName": "CrossBorderPayment",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CrossBorderPayment.sol\":\"CrossBorderPayment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CrossBorderPayment.sol\":{\"keccak256\":\"0x8d0f2d76652b2df9edb98fbeafd59aebe6f1bb4e290079fef7f28591bbcba47b\",\"urls\":[\"bzzr://2b5df181a4dc8496fe62fbfd2af89fb7de66fcd6bd6d8cc5d2f25e51e091ce55\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105ac806100606000396000f3fe608060405260043610610067576000357c01000000000000000000000000000000000000000000000000000000009004806327e235e3146100715780632ccb1b30146100d65780636f9fb98a146101315780638da5cb5b1461015c578063d0e30db0146101b3575b61006f6101bd565b005b34801561007d57600080fd5b506100c06004803603602081101561009457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102f8565b6040518082815260200191505060405180910390f35b3480156100e257600080fd5b5061012f600480360360408110156100f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610310565b005b34801561013d57600080fd5b5061014661053c565b6040518082815260200191505060405180910390f35b34801561016857600080fd5b5061017161055b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101bb6101bd565b005b60003411151561025b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f4465706f73697420616d6f756e74206d7573742062652067726561746572207481526020017f68616e203000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b60016020528060005260406000206000915090505481565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156103c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e73756666696369656e742062616c616e636500000000000000000000000081525060200191505060405180910390fd5b60008111151561043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416d6f756e74206d7573742062652067726561746572207468616e203000000081525060200191505060405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104d2573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a723058207ab0639605b126c49b42b012a2641482271b8a0563645bfe7fb84b5a37cc795b0029",
  "deployedBytecode": "0x608060405260043610610067576000357c01000000000000000000000000000000000000000000000000000000009004806327e235e3146100715780632ccb1b30146100d65780636f9fb98a146101315780638da5cb5b1461015c578063d0e30db0146101b3575b61006f6101bd565b005b34801561007d57600080fd5b506100c06004803603602081101561009457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102f8565b6040518082815260200191505060405180910390f35b3480156100e257600080fd5b5061012f600480360360408110156100f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610310565b005b34801561013d57600080fd5b5061014661053c565b6040518082815260200191505060405180910390f35b34801561016857600080fd5b5061017161055b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101bb6101bd565b005b60003411151561025b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f4465706f73697420616d6f756e74206d7573742062652067726561746572207481526020017f68616e203000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b60016020528060005260406000206000915090505481565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156103c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e73756666696369656e742062616c616e636500000000000000000000000081525060200191505060405180910390fd5b60008111151561043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416d6f756e74206d7573742062652067726561746572207468616e203000000081525060200191505060405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104d2573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a723058207ab0639605b126c49b42b012a2641482271b8a0563645bfe7fb84b5a37cc795b0029",
  "sourceMap": "16830:1194:1:-;;;17085:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;17085:58:1;17125:10;17117:5;;:18;;;;;;;;;;;;;;;;;;16830:1194;;;;;;",
  "deployedSourceMap": "16830:1194:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18004:9;:7;:9::i;:::-;16830:1194;17033:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17033:43:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17033:43:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17490:352;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17490:352:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17490:352:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17850:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17850:107:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16865:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16865:20:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17276:206;;;:::i;:::-;;;17341:1;17329:9;:13;17321:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17419:9;17395:8;:20;17404:10;17395:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;17452:10;17444:30;;;17464:9;17444:30;;;;;;;;;;;;;;;;;;17276:206::o;17033:43::-;;;;;;;;;;;;;;;;;:::o;17490:352::-;17603:6;17579:8;:20;17588:10;17579:20;;;;;;;;;;;;;;;;:30;;17571:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17662:1;17653:6;:10;17645:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17734:6;17710:8;:20;17719:10;17710:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;17751:9;:18;;:26;17770:6;17751:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17751:26:1;17816:9;17795:39;;17804:10;17795:39;;;17827:6;17795:39;;;;;;;;;;;;;;;;;;17490:352;;:::o;17850:107::-;17901:7;17936:4;17928:21;;;17921:28;;17850:107;:::o;16865:20::-;;;;;;;;;;;;;:::o",
  "source": "// // SPDX-License-Identifier: MIT\r\n// pragma solidity ^0.5.1;\r\n\r\n// import \"./AggregatorV3Interface.sol\";\r\n\r\n// contract CrossBorderPayment {\r\n//     address public owner;\r\n//     AggregatorV3Interface internal priceFeedETHUSD;\r\n//     uint256 public usdToINR;\r\n\r\n//     mapping(address => mapping(bytes32 => uint128)) public balances;\r\n//     bytes32[] public supportedCurrencies;\r\n\r\n//     event Deposit(address indexed user, uint256 amount, bytes32 currency);\r\n//     event Withdrawal(address indexed user, uint256 amount, bytes32 currency);\r\n//     event CrossBorderPaymentSent(address indexed sender, address indexed receiver, uint256 amount, bytes32 fromCurrency, bytes32 toCurrency);\r\n//     event ExchangeRatesUpdated(uint256 usdToINR);\r\n//     event CurrencyAdded(bytes32 currency);\r\n\r\n//     constructor() public {\r\n//         owner = msg.sender;\r\n//         priceFeedETHUSD = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\r\n//         supportedCurrencies.push(stringToBytes32(\"INR\"));\r\n//     }\r\n\r\n//     modifier onlyOwner() {\r\n//         require(msg.sender == owner, \"Only owner can call this function\");\r\n//         _;\r\n//     }\r\n\r\n//     function getLatestETHUSDPrice() public view returns (uint256) {\r\n//         (, int256 price, , , ) = priceFeedETHUSD.latestRoundData();\r\n//         return uint256(price);\r\n//     }\r\n\r\n//     function updateExchangeRateINR(uint256 _usdToINR) public onlyOwner {\r\n//         usdToINR = _usdToINR;\r\n//         emit ExchangeRatesUpdated(usdToINR);\r\n//     }\r\n\r\n//     function addSupportedCurrency(string memory currency) public onlyOwner {\r\n//         supportedCurrencies.push(stringToBytes32(currency));\r\n//         emit CurrencyAdded(stringToBytes32(currency));\r\n//     }\r\n\r\n//     function getLatestETHINRPrice() public view returns (uint256) {\r\n//         uint256 ethUSD = getLatestETHUSDPrice();\r\n//         require(ethUSD > 0, \"ETH to USD price must be greater than 0\");\r\n//         return (ethUSD * usdToINR) / 1e8;\r\n//     }\r\n\r\n//     function isSupportedCurrency(string memory currency) internal view returns (bool) {\r\n//         bytes32 currencyBytes = stringToBytes32(currency);\r\n//         for (uint256 i = 0; i < supportedCurrencies.length; i++) {\r\n//             if (supportedCurrencies[i] == currencyBytes) {\r\n//                 return true;\r\n//             }\r\n//         }\r\n//         return false;\r\n//     }\r\n\r\n//     function deposit(string memory currency) public payable {\r\n//         require(msg.value > 0, \"Deposit amount must be greater than 0\");\r\n//         require(isSupportedCurrency(currency), \"Unsupported currency\");\r\n\r\n//         uint256 exchangeRate = getExchangeRate(currency);\r\n//         require(exchangeRate > 0, \"Invalid exchange rate\");\r\n\r\n//         uint256 amountInCurrency = (msg.value * exchangeRate) / 1 ether;\r\n//         balances[msg.sender][stringToBytes32(currency)] += uint128(amountInCurrency);\r\n//         emit Deposit(msg.sender, amountInCurrency, stringToBytes32(currency));\r\n//     }\r\n\r\n//     function withdraw(uint256 amount, string memory currency) public {\r\n//         require(balances[msg.sender][stringToBytes32(currency)] >= amount, \"Insufficient balance\");\r\n\r\n//         uint256 exchangeRate = getExchangeRate(currency);\r\n//         uint256 amountETH = (amount * 1 ether) / exchangeRate;\r\n\r\n//         balances[msg.sender][stringToBytes32(currency)] -= uint128(amount);\r\n//         msg.sender.transfer(amountETH);\r\n//         emit Withdrawal(msg.sender, amount, stringToBytes32(currency));\r\n//     }\r\n\r\n//     function getExchangeRate(string memory currency) internal view returns (uint256) {\r\n//         if (compareStrings(currency, \"INR\")) {\r\n//             uint256 ethINR = getLatestETHINRPrice();\r\n//             require(ethINR > 0, \"ETH to INR price must be greater than 0\");\r\n//             return ethINR;\r\n//         }\r\n//         return 0;\r\n//     }\r\n\r\n//     function compareStrings(string memory a, string memory b) internal pure returns (bool) {\r\n//         return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b));\r\n//     }\r\n\r\n//     // Correct fallback function for Solidity 0.5.x\r\n//     function() external payable {}\r\n\r\n//     // Proper stringToBytes32 function\r\n//     function stringToBytes32(string memory source) internal pure returns (bytes32 result) {\r\n//         bytes memory tempEmptyStringTest = bytes(source);\r\n//         if (tempEmptyStringTest.length == 0) {\r\n//             return 0x0;\r\n//         }\r\n//         assembly {\r\n//             result := mload(add(source, 32))\r\n//         }\r\n//     }\r\n// } //old smart contract\r\n\r\n// // SPDX-License-Identifier: MIT\r\n// pragma solidity ^0.5.1;\r\n\r\n// import \"./AggregatorV3Interface.sol\";\r\n\r\n// contract CrossBorderPayment {\r\n//     address public owner;\r\n//     AggregatorV3Interface internal priceFeedETHUSD;\r\n//     uint256 public usdToINR;\r\n\r\n//     mapping(address => mapping(bytes32 => uint128)) public balances;\r\n//     bytes32[] public supportedCurrencies;\r\n\r\n//     event Deposit(address indexed user, uint256 amount, bytes32 currency);\r\n//     event Withdrawal(address indexed user, uint256 amount, bytes32 currency);\r\n//     event CrossBorderPaymentSent(address indexed sender, address indexed receiver, uint256 amount, bytes32 fromCurrency, bytes32 toCurrency);\r\n//     event ExchangeRatesUpdated(uint256 usdToINR);\r\n//     event CurrencyAdded(bytes32 currency);\r\n//     event DebugExchangeRate(uint256 exchangeRate); // New Debugging Event\r\n//     event DebugAmountInCurrency(uint256 amountInCurrency); // Debugging Event\r\n\r\n//     constructor() public {\r\n//         owner = msg.sender;\r\n//         priceFeedETHUSD = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306); // Sepolia Testnet\r\n//         supportedCurrencies.push(stringToBytes32(\"INR\"));\r\n//     }\r\n\r\n//     modifier onlyOwner() {\r\n//         require(msg.sender == owner, \"Only owner can call this function\");\r\n//         _;\r\n//     }\r\n\r\n//     function getLatestETHUSDPrice() public view returns (uint256) {\r\n//         (, int256 price, , , ) = priceFeedETHUSD.latestRoundData();\r\n//         require(price > 0, \"Invalid ETH to USD price\");\r\n//         return uint256(price);\r\n//     }\r\n\r\n//     function updateExchangeRateINR(uint256 _usdToINR) public onlyOwner {\r\n//         require(_usdToINR > 0, \"Exchange rate must be greater than 0\");\r\n//         usdToINR = _usdToINR;\r\n//         emit ExchangeRatesUpdated(usdToINR);\r\n//     }\r\n\r\n//     function addSupportedCurrency(string memory currency) public onlyOwner {\r\n//         bytes32 currencyBytes = stringToBytes32(currency);\r\n//         require(!isSupportedCurrency(currencyBytes), \"Currency already supported\");\r\n//         supportedCurrencies.push(currencyBytes);\r\n//         emit CurrencyAdded(currencyBytes);\r\n//     }\r\n\r\n//     function getLatestETHINRPrice() public view returns (uint256) {\r\n//         uint256 ethUSD = getLatestETHUSDPrice();\r\n//         return (ethUSD * usdToINR) / 1e8; // Adjust for 8 decimal places\r\n//     }\r\n\r\n//     function isSupportedCurrency(bytes32 currency) internal view returns (bool) {\r\n//         for (uint256 i = 0; i < supportedCurrencies.length; i++) {\r\n//             if (supportedCurrencies[i] == currency) {\r\n//                 return true;\r\n//             }\r\n//         }\r\n//         return false;\r\n//     }\r\n\r\n//     function deposit(string memory currency) public payable {\r\n//         require(msg.value > 0, \"Deposit amount must be greater than 0\");\r\n//         bytes32 currencyBytes = stringToBytes32(currency);\r\n//         require(isSupportedCurrency(currencyBytes), \"Unsupported currency\");\r\n\r\n//         uint256 exchangeRate = getExchangeRate(currency);\r\n//         emit DebugExchangeRate(exchangeRate); // Debug exchange rate\r\n\r\n//         require(exchangeRate > 0, \"Invalid exchange rate\");\r\n\r\n//         uint256 amountInCurrency = (msg.value * exchangeRate) / 1 ether;\r\n//         emit DebugAmountInCurrency(amountInCurrency); // Debugging amount calculated\r\n\r\n//         balances[msg.sender][currencyBytes] += uint128(amountInCurrency);\r\n//         emit Deposit(msg.sender, amountInCurrency, currencyBytes);\r\n//     }\r\n\r\n//     function withdraw(uint256 amount, string memory currency) public {\r\n//         bytes32 currencyBytes = stringToBytes32(currency);\r\n//         require(balances[msg.sender][currencyBytes] >= amount, \"Insufficient balance\");\r\n\r\n//         uint256 exchangeRate = getExchangeRate(currency);\r\n//         uint256 amountETH = (amount * 1 ether) / exchangeRate;\r\n\r\n//         balances[msg.sender][currencyBytes] -= uint128(amount);\r\n//         msg.sender.transfer(amountETH);\r\n//         emit Withdrawal(msg.sender, amount, currencyBytes);\r\n//     }\r\n\r\n//     function getExchangeRate(string memory currency) internal view returns (uint256) {\r\n//         if (compareStrings(currency, \"INR\")) {\r\n//             uint256 ethINR = getLatestETHINRPrice();\r\n//             require(ethINR > 0, \"ETH to INR price must be greater than 0\");\r\n//             return ethINR;\r\n//         }\r\n//         revert(\"Exchange rate for currency not available\");\r\n//     }\r\n\r\n//     function compareStrings(string memory a, string memory b) internal pure returns (bool) {\r\n//         return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b));\r\n//     }\r\n\r\n//     // Fallback function to handle direct ETH deposits\r\n//     function() external payable {\r\n//         emit Deposit(msg.sender, msg.value, stringToBytes32(\"ETH\"));\r\n//     }\r\n\r\n//     function stringToBytes32(string memory source) internal pure returns (bytes32 result) {\r\n//         bytes memory tempEmptyStringTest = bytes(source);\r\n//         if (tempEmptyStringTest.length == 0) {\r\n//             return 0x0;\r\n//         }\r\n//         assembly {\r\n//             result := mload(add(source, 32))\r\n//         }\r\n//     }\r\n// } // working one\r\n\r\n// // SPDX-License-Identifier: MIT\r\n// pragma solidity ^0.5.1;\r\n\r\n// import \"./AggregatorV3Interface.sol\";\r\n\r\n// contract CrossBorderPayment {\r\n//     address public owner;\r\n//     AggregatorV3Interface internal priceFeedETHUSD;\r\n//     uint256 public usdToINR;\r\n\r\n//     mapping(address => mapping(bytes32 => uint128)) public balances;\r\n//     bytes32[] public supportedCurrencies;\r\n\r\n//     event Deposit(address indexed user, uint256 amount, bytes32 currency);\r\n//     event Withdrawal(address indexed user, uint256 amount, bytes32 currency);\r\n//     event ExchangeRatesUpdated(uint256 usdToINR);\r\n//     event CurrencyAdded(bytes32 currency);\r\n\r\n//     constructor() public {\r\n//         owner = msg.sender;\r\n//         priceFeedETHUSD = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306); // Sepolia Testnet\r\n//         supportedCurrencies.push(stringToBytes32(\"INR\"));\r\n//     }\r\n\r\n//     modifier onlyOwner() {\r\n//         require(msg.sender == owner, \"Only owner can call this function\");\r\n//         _;\r\n//     }\r\n\r\n//     function getLatestETHUSDPrice() public view returns (uint256) {\r\n//         (, int256 price, , , ) = priceFeedETHUSD.latestRoundData();\r\n//         require(price > 0, \"Invalid ETH to USD price\");\r\n//         return uint256(price);\r\n//     }\r\n\r\n//     function updateExchangeRateINR(uint256 _usdToINR) public onlyOwner {\r\n//         require(_usdToINR > 0, \"Exchange rate must be greater than 0\");\r\n//         usdToINR = _usdToINR;\r\n//         emit ExchangeRatesUpdated(usdToINR);\r\n//     }\r\n\r\n//     function addSupportedCurrency(string memory currency) public onlyOwner {\r\n//         bytes32 currencyBytes = stringToBytes32(currency);\r\n//         require(!isSupportedCurrency(currencyBytes), \"Currency already supported\");\r\n//         supportedCurrencies.push(currencyBytes);\r\n//         emit CurrencyAdded(currencyBytes);\r\n//     }\r\n\r\n//     function getLatestETHINRPrice() public view returns (uint256) {\r\n//         uint256 ethUSD = getLatestETHUSDPrice();\r\n//         require(usdToINR > 0, \"Exchange rate INR not set\");\r\n//         return (ethUSD * usdToINR) / 1e8; // Adjust for decimals\r\n//     }\r\n\r\n//     function isSupportedCurrency(bytes32 currency) internal view returns (bool) {\r\n//         for (uint256 i = 0; i < supportedCurrencies.length; i++) {\r\n//             if (supportedCurrencies[i] == currency) {\r\n//                 return true;\r\n//             }\r\n//         }\r\n//         return false;\r\n//     }\r\n\r\n//     function deposit(string memory currency) public payable {\r\n//         require(msg.value > 0, \"Deposit amount must be greater than 0\");\r\n//         bytes32 currencyBytes = stringToBytes32(currency);\r\n//         require(isSupportedCurrency(currencyBytes), \"Unsupported currency\");\r\n\r\n//         uint256 exchangeRate = getExchangeRate(currency);\r\n//         require(exchangeRate > 0, \"Invalid exchange rate\");\r\n\r\n//         uint256 amountInCurrency = (msg.value * exchangeRate) / 1 ether;\r\n//         require(amountInCurrency > 0, \"Calculated amount too low\");\r\n\r\n//         balances[msg.sender][currencyBytes] += uint128(amountInCurrency);\r\n//         emit Deposit(msg.sender, amountInCurrency, currencyBytes);\r\n//     }\r\n\r\n//     function withdraw(uint256 amount, string memory currency) public {\r\n//         bytes32 currencyBytes = stringToBytes32(currency);\r\n//         require(balances[msg.sender][currencyBytes] >= amount, \"Insufficient balance\");\r\n\r\n//         uint256 exchangeRate = getExchangeRate(currency);\r\n//         uint256 amountETH = (amount * 1 ether) / exchangeRate;\r\n\r\n//         require(amountETH > 0, \"Calculated ETH amount too low\");\r\n\r\n//         balances[msg.sender][currencyBytes] -= uint128(amount);\r\n//         msg.sender.transfer(amountETH);\r\n//         emit Withdrawal(msg.sender, amount, currencyBytes);\r\n//     }\r\n\r\n//     function getExchangeRate(string memory currency) internal view returns (uint256) {\r\n//         if (compareStrings(currency, \"INR\")) {\r\n//             uint256 ethINR = getLatestETHINRPrice();\r\n//             require(ethINR > 0, \"ETH to INR price must be greater than 0\");\r\n//             return ethINR;\r\n//         }\r\n//         revert(\"Exchange rate for currency not available\");\r\n//     }\r\n\r\n//     function compareStrings(string memory a, string memory b) internal pure returns (bool) {\r\n//         return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b));\r\n//     }\r\n\r\n//     function stringToBytes32(string memory source) internal pure returns (bytes32 result) {\r\n//         bytes memory tempEmptyStringTest = bytes(source);\r\n//         if (tempEmptyStringTest.length == 0) {\r\n//             return 0x0;\r\n//         }\r\n//         assembly {\r\n//             result := mload(add(source, 32))\r\n//         }\r\n//     }\r\n\r\n//     function() external payable {\r\n//         emit Deposit(msg.sender, msg.value, stringToBytes32(\"ETH\"));\r\n//     }\r\n// } // last working \r\n\r\n\r\n// // SPDX-License-Identifier: MIT\r\n// pragma solidity ^0.5.1;\r\n\r\n// contract CrossBorderPayment {\r\n//     address public owner;\r\n\r\n//     mapping(address => uint256) public balances;\r\n\r\n//     event Deposit(address indexed user, uint256 amount);\r\n//     event Transfer(address indexed sender, address indexed receiver, uint256 amount);\r\n//     event Withdrawal(address indexed user, uint256 amount);\r\n\r\n//     constructor() public {\r\n//         owner = msg.sender;\r\n//     }\r\n\r\n//     modifier onlyOwner() {\r\n//         require(msg.sender == owner, \"Only owner can call this function\");\r\n//         _;\r\n//     }\r\n\r\n//     // Function for users to deposit ETH into the smart contract\r\n//     function deposit() public payable {\r\n//         require(msg.value > 0, \"Deposit amount must be greater than 0\");\r\n//         balances[msg.sender] += msg.value;\r\n//         emit Deposit(msg.sender, msg.value);\r\n//     }\r\n\r\n//     // Function to transfer ETH balance from the sender to another user8\r\n//     function transfer(address receiver, uint256 amount) public {\r\n//         require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n//         require(receiver != address(0), \"Invalid receiver address\");\r\n\r\n//         balances[msg.sender] -= amount;\r\n//         balances[receiver] += amount;\r\n\r\n//         emit Transfer(msg.sender, receiver, amount);\r\n//     }\r\n\r\n//     // Function for users to withdraw their ETH\r\n//     function withdraw(uint256 amount) public {\r\n//         require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n\r\n//         balances[msg.sender] -= amount;\r\n//         msg.sender.transfer(amount);\r\n\r\n//         emit Withdrawal(msg.sender, amount);\r\n//     }\r\n\r\n//     // Function to get the user's current balance\r\n//     function getBalance(address user) public view returns (uint256) {\r\n//         return balances[user];\r\n//     }\r\n\r\n//     // Fallback function to handle unexpected ETH deposits\r\n//     function() external payable {\r\n//         deposit();\r\n//     }\r\n// } \r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.1;\r\n\r\ncontract CrossBorderPayment {\r\n    address public owner;\r\n\r\n    event Deposit(address indexed user, uint256 amount);\r\n    event Transfer(address indexed from, address indexed to, uint256 amount);\r\n\r\n    mapping(address => uint256) public balances;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    function deposit() public payable {\r\n        require(msg.value > 0, \"Deposit amount must be greater than 0\");\r\n        balances[msg.sender] += msg.value;\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function transferTo(address payable recipient, uint256 amount) public {\r\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n        balances[msg.sender] -= amount;\r\n        recipient.transfer(amount);\r\n\r\n        emit Transfer(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function getContractBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function() external payable {\r\n        deposit();\r\n    }\r\n}",
  "sourcePath": "D:\\codes\\HackIndia\\cross-border-payment\\contracts\\CrossBorderPayment.sol",
  "ast": {
    "absolutePath": "project:/contracts/CrossBorderPayment.sol",
    "exportedSymbols": {
      "CrossBorderPayment": [
        179
      ]
    },
    "id": 180,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 47,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "16803:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 179,
        "linearizedBaseContracts": [
          179
        ],
        "name": "CrossBorderPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 49,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "16865:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "16865:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 55,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "16908:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16908:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "16930:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16930:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16907:38:1"
            },
            "src": "16894:52:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 63,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "16967:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16967:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "16989:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16989:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "17009:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17009:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16966:58:1"
            },
            "src": "16952:73:1"
          },
          {
            "constant": false,
            "id": 67,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "17033:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 64,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "17041:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "17033:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 65,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "17052:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "17106:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "17117:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "17125:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "17125:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "17117:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "17117:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17096:2:1"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17106:0:1"
            },
            "scope": 179,
            "src": "17085:58:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "17172:96:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "17191:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "17191:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "17205:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17191:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17212:35:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
                          "typeString": "literal_string \"Only owner can call this function\""
                        },
                        "value": "Only owner can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
                          "typeString": "literal_string \"Only owner can call this function\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        197,
                        198
                      ],
                      "referencedDeclaration": 198,
                      "src": "17183:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17183:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "17183:65:1"
                },
                {
                  "id": 86,
                  "nodeType": "PlaceholderStatement",
                  "src": "17259:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 88,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17169:2:1"
            },
            "src": "17151:117:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "17310:172:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "17329:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "17329:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17341:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17329:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17344:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6",
                          "typeString": "literal_string \"Deposit amount must be greater than 0\""
                        },
                        "value": "Deposit amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6",
                          "typeString": "literal_string \"Deposit amount must be greater than 0\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        197,
                        198
                      ],
                      "referencedDeclaration": 198,
                      "src": "17321:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17321:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "17321:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "17395:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "17404:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "17404:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17395:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "17419:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "17419:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17395:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "17395:33:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "17452:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "17452:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "17464:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "17464:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 107,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "17444:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17444:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "17439:35:1"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17292:2:1"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17310:0:1"
            },
            "scope": 179,
            "src": "17276:206:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "17560:282:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "17579:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 126,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "17588:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "17588:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17579:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "17603:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17579:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17611:22:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        197,
                        198
                      ],
                      "referencedDeclaration": 198,
                      "src": "17571:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17571:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "17571:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "17653:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17662:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17653:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17665:31:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        197,
                        198
                      ],
                      "referencedDeclaration": 198,
                      "src": "17645:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17645:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "17645:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "17710:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "17719:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "17719:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17710:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "17734:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17710:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "17710:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "17770:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "17751:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "17751:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17751:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "17751:26:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "17804:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "17804:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "17816:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "17827:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 152,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "17795:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17795:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "EmitStatement",
                  "src": "17790:44:1"
                }
              ]
            },
            "documentation": null,
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "17510:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17510:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "17537:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17537:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17509:43:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17560:0:1"
            },
            "scope": 179,
            "src": "17490:352:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "17910:47:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "17936:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrossBorderPayment_$179",
                            "typeString": "contract CrossBorderPayment"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CrossBorderPayment_$179",
                            "typeString": "contract CrossBorderPayment"
                          }
                        ],
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17928:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17928:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "17928:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "17921:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17877:2:1"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "17901:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17901:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17900:9:1"
            },
            "scope": 179,
            "src": "17850:107:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "17993:28:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 174,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "18004:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18004:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "18004:9:1"
                }
              ]
            },
            "documentation": null,
            "id": 178,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17973:2:1"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17993:0:1"
            },
            "scope": 179,
            "src": "17965:56:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 180,
        "src": "16830:1194:1"
      }
    ],
    "src": "16803:1221:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/CrossBorderPayment.sol",
      "exportedSymbols": {
        "CrossBorderPayment": [
          179
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".1"
          ]
        },
        "id": 47,
        "name": "PragmaDirective",
        "src": "16803:23:1"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            179
          ],
          "name": "CrossBorderPayment",
          "scope": 180
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "owner",
              "scope": 179,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 48,
                "name": "ElementaryTypeName",
                "src": "16865:7:1"
              }
            ],
            "id": 49,
            "name": "VariableDeclaration",
            "src": "16865:20:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "Deposit"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "user",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 50,
                        "name": "ElementaryTypeName",
                        "src": "16908:7:1"
                      }
                    ],
                    "id": 51,
                    "name": "VariableDeclaration",
                    "src": "16908:20:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "amount",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 52,
                        "name": "ElementaryTypeName",
                        "src": "16930:7:1"
                      }
                    ],
                    "id": 53,
                    "name": "VariableDeclaration",
                    "src": "16930:14:1"
                  }
                ],
                "id": 54,
                "name": "ParameterList",
                "src": "16907:38:1"
              }
            ],
            "id": 55,
            "name": "EventDefinition",
            "src": "16894:52:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "Transfer"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "from",
                      "scope": 63,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 56,
                        "name": "ElementaryTypeName",
                        "src": "16967:7:1"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "16967:20:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "to",
                      "scope": 63,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 58,
                        "name": "ElementaryTypeName",
                        "src": "16989:7:1"
                      }
                    ],
                    "id": 59,
                    "name": "VariableDeclaration",
                    "src": "16989:18:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "amount",
                      "scope": 63,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 60,
                        "name": "ElementaryTypeName",
                        "src": "17009:7:1"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "17009:14:1"
                  }
                ],
                "id": 62,
                "name": "ParameterList",
                "src": "16966:58:1"
              }
            ],
            "id": 63,
            "name": "EventDefinition",
            "src": "16952:73:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "balances",
              "scope": 179,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 64,
                    "name": "ElementaryTypeName",
                    "src": "17041:7:1"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 65,
                    "name": "ElementaryTypeName",
                    "src": "17052:7:1"
                  }
                ],
                "id": 66,
                "name": "Mapping",
                "src": "17033:27:1"
              }
            ],
            "id": 67,
            "name": "VariableDeclaration",
            "src": "17033:43:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 179,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 68,
                "name": "ParameterList",
                "src": "17096:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 69,
                "name": "ParameterList",
                "src": "17106:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 49,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 70,
                            "name": "Identifier",
                            "src": "17117:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 194,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 71,
                                "name": "Identifier",
                                "src": "17125:3:1"
                              }
                            ],
                            "id": 72,
                            "name": "MemberAccess",
                            "src": "17125:10:1"
                          }
                        ],
                        "id": 73,
                        "name": "Assignment",
                        "src": "17117:18:1"
                      }
                    ],
                    "id": 74,
                    "name": "ExpressionStatement",
                    "src": "17117:18:1"
                  }
                ],
                "id": 75,
                "name": "Block",
                "src": "17106:37:1"
              }
            ],
            "id": 76,
            "name": "FunctionDefinition",
            "src": "17085:58:1"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyOwner",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 77,
                "name": "ParameterList",
                "src": "17169:2:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
                                  "typeString": "literal_string \"Only owner can call this function\""
                                }
                              ],
                              "overloadedDeclarations": [
                                197,
                                198
                              ],
                              "referencedDeclaration": 198,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 78,
                            "name": "Identifier",
                            "src": "17183:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 194,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 79,
                                    "name": "Identifier",
                                    "src": "17191:3:1"
                                  }
                                ],
                                "id": 80,
                                "name": "MemberAccess",
                                "src": "17191:10:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 49,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 81,
                                "name": "Identifier",
                                "src": "17205:5:1"
                              }
                            ],
                            "id": 82,
                            "name": "BinaryOperation",
                            "src": "17191:19:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Only owner can call this function\"",
                              "value": "Only owner can call this function"
                            },
                            "id": 83,
                            "name": "Literal",
                            "src": "17212:35:1"
                          }
                        ],
                        "id": 84,
                        "name": "FunctionCall",
                        "src": "17183:65:1"
                      }
                    ],
                    "id": 85,
                    "name": "ExpressionStatement",
                    "src": "17183:65:1"
                  },
                  {
                    "id": 86,
                    "name": "PlaceholderStatement",
                    "src": "17259:1:1"
                  }
                ],
                "id": 87,
                "name": "Block",
                "src": "17172:96:1"
              }
            ],
            "id": 88,
            "name": "ModifierDefinition",
            "src": "17151:117:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "deposit",
              "scope": 179,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 89,
                "name": "ParameterList",
                "src": "17292:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 90,
                "name": "ParameterList",
                "src": "17310:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6",
                                  "typeString": "literal_string \"Deposit amount must be greater than 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                197,
                                198
                              ],
                              "referencedDeclaration": 198,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 91,
                            "name": "Identifier",
                            "src": "17321:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 194,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 92,
                                    "name": "Identifier",
                                    "src": "17329:3:1"
                                  }
                                ],
                                "id": 93,
                                "name": "MemberAccess",
                                "src": "17329:9:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 94,
                                "name": "Literal",
                                "src": "17341:1:1"
                              }
                            ],
                            "id": 95,
                            "name": "BinaryOperation",
                            "src": "17329:13:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e2030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Deposit amount must be greater than 0\"",
                              "value": "Deposit amount must be greater than 0"
                            },
                            "id": 96,
                            "name": "Literal",
                            "src": "17344:39:1"
                          }
                        ],
                        "id": 97,
                        "name": "FunctionCall",
                        "src": "17321:63:1"
                      }
                    ],
                    "id": 98,
                    "name": "ExpressionStatement",
                    "src": "17321:63:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 67,
                                  "type": "mapping(address => uint256)",
                                  "value": "balances"
                                },
                                "id": 99,
                                "name": "Identifier",
                                "src": "17395:8:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 194,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 100,
                                    "name": "Identifier",
                                    "src": "17404:3:1"
                                  }
                                ],
                                "id": 101,
                                "name": "MemberAccess",
                                "src": "17404:10:1"
                              }
                            ],
                            "id": 102,
                            "name": "IndexAccess",
                            "src": "17395:20:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 194,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 103,
                                "name": "Identifier",
                                "src": "17419:3:1"
                              }
                            ],
                            "id": 104,
                            "name": "MemberAccess",
                            "src": "17419:9:1"
                          }
                        ],
                        "id": 105,
                        "name": "Assignment",
                        "src": "17395:33:1"
                      }
                    ],
                    "id": 106,
                    "name": "ExpressionStatement",
                    "src": "17395:33:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 55,
                              "type": "function (address,uint256)",
                              "value": "Deposit"
                            },
                            "id": 107,
                            "name": "Identifier",
                            "src": "17444:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 194,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 108,
                                "name": "Identifier",
                                "src": "17452:3:1"
                              }
                            ],
                            "id": 109,
                            "name": "MemberAccess",
                            "src": "17452:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 194,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 110,
                                "name": "Identifier",
                                "src": "17464:3:1"
                              }
                            ],
                            "id": 111,
                            "name": "MemberAccess",
                            "src": "17464:9:1"
                          }
                        ],
                        "id": 112,
                        "name": "FunctionCall",
                        "src": "17444:30:1"
                      }
                    ],
                    "id": 113,
                    "name": "EmitStatement",
                    "src": "17439:35:1"
                  }
                ],
                "id": 114,
                "name": "Block",
                "src": "17310:172:1"
              }
            ],
            "id": 115,
            "name": "FunctionDefinition",
            "src": "17276:206:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transferTo",
              "scope": 179,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "recipient",
                      "scope": 160,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 116,
                        "name": "ElementaryTypeName",
                        "src": "17510:15:1"
                      }
                    ],
                    "id": 117,
                    "name": "VariableDeclaration",
                    "src": "17510:25:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 160,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 118,
                        "name": "ElementaryTypeName",
                        "src": "17537:7:1"
                      }
                    ],
                    "id": 119,
                    "name": "VariableDeclaration",
                    "src": "17537:14:1"
                  }
                ],
                "id": 120,
                "name": "ParameterList",
                "src": "17509:43:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 121,
                "name": "ParameterList",
                "src": "17560:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                  "typeString": "literal_string \"Insufficient balance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                197,
                                198
                              ],
                              "referencedDeclaration": 198,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 122,
                            "name": "Identifier",
                            "src": "17571:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 67,
                                      "type": "mapping(address => uint256)",
                                      "value": "balances"
                                    },
                                    "id": 123,
                                    "name": "Identifier",
                                    "src": "17579:8:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 194,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 124,
                                        "name": "Identifier",
                                        "src": "17588:3:1"
                                      }
                                    ],
                                    "id": 125,
                                    "name": "MemberAccess",
                                    "src": "17588:10:1"
                                  }
                                ],
                                "id": 126,
                                "name": "IndexAccess",
                                "src": "17579:20:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 119,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 127,
                                "name": "Identifier",
                                "src": "17603:6:1"
                              }
                            ],
                            "id": 128,
                            "name": "BinaryOperation",
                            "src": "17579:30:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "496e73756666696369656e742062616c616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Insufficient balance\"",
                              "value": "Insufficient balance"
                            },
                            "id": 129,
                            "name": "Literal",
                            "src": "17611:22:1"
                          }
                        ],
                        "id": 130,
                        "name": "FunctionCall",
                        "src": "17571:63:1"
                      }
                    ],
                    "id": 131,
                    "name": "ExpressionStatement",
                    "src": "17571:63:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                  "typeString": "literal_string \"Amount must be greater than 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                197,
                                198
                              ],
                              "referencedDeclaration": 198,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 132,
                            "name": "Identifier",
                            "src": "17645:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 119,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 133,
                                "name": "Identifier",
                                "src": "17653:6:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 134,
                                "name": "Literal",
                                "src": "17662:1:1"
                              }
                            ],
                            "id": 135,
                            "name": "BinaryOperation",
                            "src": "17653:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Amount must be greater than 0\"",
                              "value": "Amount must be greater than 0"
                            },
                            "id": 136,
                            "name": "Literal",
                            "src": "17665:31:1"
                          }
                        ],
                        "id": 137,
                        "name": "FunctionCall",
                        "src": "17645:52:1"
                      }
                    ],
                    "id": 138,
                    "name": "ExpressionStatement",
                    "src": "17645:52:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "-=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 67,
                                  "type": "mapping(address => uint256)",
                                  "value": "balances"
                                },
                                "id": 139,
                                "name": "Identifier",
                                "src": "17710:8:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 194,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 140,
                                    "name": "Identifier",
                                    "src": "17719:3:1"
                                  }
                                ],
                                "id": 141,
                                "name": "MemberAccess",
                                "src": "17719:10:1"
                              }
                            ],
                            "id": 142,
                            "name": "IndexAccess",
                            "src": "17710:20:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 119,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 143,
                            "name": "Identifier",
                            "src": "17734:6:1"
                          }
                        ],
                        "id": 144,
                        "name": "Assignment",
                        "src": "17710:30:1"
                      }
                    ],
                    "id": 145,
                    "name": "ExpressionStatement",
                    "src": "17710:30:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": null,
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 117,
                                  "type": "address payable",
                                  "value": "recipient"
                                },
                                "id": 146,
                                "name": "Identifier",
                                "src": "17751:9:1"
                              }
                            ],
                            "id": 148,
                            "name": "MemberAccess",
                            "src": "17751:18:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 119,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 149,
                            "name": "Identifier",
                            "src": "17770:6:1"
                          }
                        ],
                        "id": 150,
                        "name": "FunctionCall",
                        "src": "17751:26:1"
                      }
                    ],
                    "id": 151,
                    "name": "ExpressionStatement",
                    "src": "17751:26:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 63,
                              "type": "function (address,address,uint256)",
                              "value": "Transfer"
                            },
                            "id": 152,
                            "name": "Identifier",
                            "src": "17795:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 194,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 153,
                                "name": "Identifier",
                                "src": "17804:3:1"
                              }
                            ],
                            "id": 154,
                            "name": "MemberAccess",
                            "src": "17804:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 117,
                              "type": "address payable",
                              "value": "recipient"
                            },
                            "id": 155,
                            "name": "Identifier",
                            "src": "17816:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 119,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 156,
                            "name": "Identifier",
                            "src": "17827:6:1"
                          }
                        ],
                        "id": 157,
                        "name": "FunctionCall",
                        "src": "17795:39:1"
                      }
                    ],
                    "id": 158,
                    "name": "EmitStatement",
                    "src": "17790:44:1"
                  }
                ],
                "id": 159,
                "name": "Block",
                "src": "17560:282:1"
              }
            ],
            "id": 160,
            "name": "FunctionDefinition",
            "src": "17490:352:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getContractBalance",
              "scope": 179,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 161,
                "name": "ParameterList",
                "src": "17877:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 171,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 162,
                        "name": "ElementaryTypeName",
                        "src": "17901:7:1"
                      }
                    ],
                    "id": 163,
                    "name": "VariableDeclaration",
                    "src": "17901:7:1"
                  }
                ],
                "id": 164,
                "name": "ParameterList",
                "src": "17900:9:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 164
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "balance",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CrossBorderPayment_$179",
                                      "typeString": "contract CrossBorderPayment"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 165,
                                "name": "ElementaryTypeNameExpression",
                                "src": "17928:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 209,
                                  "type": "contract CrossBorderPayment",
                                  "value": "this"
                                },
                                "id": 166,
                                "name": "Identifier",
                                "src": "17936:4:1"
                              }
                            ],
                            "id": 167,
                            "name": "FunctionCall",
                            "src": "17928:13:1"
                          }
                        ],
                        "id": 168,
                        "name": "MemberAccess",
                        "src": "17928:21:1"
                      }
                    ],
                    "id": 169,
                    "name": "Return",
                    "src": "17921:28:1"
                  }
                ],
                "id": 170,
                "name": "Block",
                "src": "17910:47:1"
              }
            ],
            "id": 171,
            "name": "FunctionDefinition",
            "src": "17850:107:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "fallback",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 179,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 172,
                "name": "ParameterList",
                "src": "17973:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 173,
                "name": "ParameterList",
                "src": "17993:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 115,
                              "type": "function ()",
                              "value": "deposit"
                            },
                            "id": 174,
                            "name": "Identifier",
                            "src": "18004:7:1"
                          }
                        ],
                        "id": 175,
                        "name": "FunctionCall",
                        "src": "18004:9:1"
                      }
                    ],
                    "id": 176,
                    "name": "ExpressionStatement",
                    "src": "18004:9:1"
                  }
                ],
                "id": 177,
                "name": "Block",
                "src": "17993:28:1"
              }
            ],
            "id": 178,
            "name": "FunctionDefinition",
            "src": "17965:56:1"
          }
        ],
        "id": 179,
        "name": "ContractDefinition",
        "src": "16830:1194:1"
      }
    ],
    "id": 180,
    "name": "SourceUnit",
    "src": "16803:1221:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {
    "11155111": {
      "events": {},
      "links": {},
      "address": "0xCCE50e589cCa874C846D4fa2B4522DeA5286876D",
      "transactionHash": "0x26ef598efad9dd2eef4a44237b8d2c93652847e5a871c51acf67f43fa642f0af"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-11-09T07:43:30.245Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}